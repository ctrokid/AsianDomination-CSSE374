relationship manager
--
- parentRelationships : HashMap<String, List<Relationship>>
- childRelationships : HashMap<String, List<Relationship>>
--
+ addRelationship(String className, Relationship relationship)
+ getClassRelationships(String className) : List<Relationship> // output stream
+ getClassRelationship(String className, Relationship type, String otherClassName) : Relationship
+ getClassSuperTypes(String className) : List<String>
+ getClassSubClasses(String className) : List<String>


addRelationship(className, relationship) {
	p.put(className, relationship);
	Relationship r = new Relationship(className, relationship.type);
	c.put(string, r);
}



-	start at composite by checking supertypes (getClassSuperTypes)
-		for each supertype: if we compose it, 
			does one of them have add / remove (Component i.e. supertype)
				check supertype's subclasses besides this class
					do these subclasses have subclasses?
					   IF THEY DO NOT: ADD TO TAG (?this subclasses?NO)
